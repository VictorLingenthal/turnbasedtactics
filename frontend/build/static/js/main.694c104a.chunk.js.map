{"version":3,"sources":["gamelogic/game.js","gamelogic/liveUnit.js","gamelogic/player.js","gamelogic/unitModels.js","gamelogic/abilities.js","services/cookieService.ts","services/apolloClient.ts","services/userService.ts","components/auth.tsx","model/routeStates.model.ts","components/menu.tsx","components/unit.tsx","services/displayedGameService.ts","components/game.tsx","services/clientgameService.ts","services/gameListService.ts","components/gameList.tsx","App.tsx","reportWebVitals.ts","index.tsx","services/gameService.js","model/gameStates.model.js"],"names":["__spreadArrays","this","s","i","il","arguments","length","r","Array","k","a","j","jl","Object","defineProperty","exports","value","Game","liveUnit_1","require","args","_this","initializeGame","players","map","player","units","initializeUnits","playerUnits","unitModels","unitModel","idx","GameUnit","insertUnits","unit","id","filterDeadUnits","filter","life","applyAbility","applyingUnit","unitAbility","recivingUnit","recivingUnits","currentTurnTimeout","targets","updatedUnits","ability","apply","changeTurn","getUnitsByPlayer","_a","checkForWinner","gameService","endGame","winner","changeTurnTimeouts","switchToNextPlayer","turn","currentPlayer","players_left","idxCurrentPlayerInc","indexOf","idxNextPlayer","players_to_remove","remaining_players","push","name","getWinner","console","log","maxlife","abilities","Player","unitModels_1","playerSetup","username","userID","Knight","Witch","Healer","alive","abilities_1","data","Attack","damage","turnTimeout","Heal","Burn","__assign","assign","t","n","p","prototype","hasOwnProperty","call","Math","min","CookieNameEnum","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","apolloClient","ApolloClient","link","cache","InMemoryCache","cookieService","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","ca","decodeURIComponent","c","charAt","substring","UserService","sessionID","SESSIONID","mutate","variables","mutation","gql","then","res","checkAuth","catch","err","login","loginData","password","confirmPassword","register","instance","Auth","props","userService","getInstance","useState","showRegister","setShowRegister","message","loginMessage","setLoginMessage","useEffect","setLoginData","onInputChange","e","target","className","onClick","onSubmit","preventDefault","type","onChange","routeStates","Menu","routeState","route","setRoute","Unit","selectedUnit","setSelectedUnit","selectedAbilty","setSelectedAbilty","executeAbility","dispatchAbility","game","u","DisplayedGameService","displayedGameService","setDisplayedGameService","getDisplayedGameService","rerender","setRerender","rerenderView","selectedUnitState","selectedAbilityState","setSelectedAbility","ClientGameService","gameID","applyingUnitID","createUnitID","unitAbilityName","recivingUnitID","recivingUnitIDs","setUpSubscription","self","subscribe","next","obj","sendTurn","callApplyAbility","GameService","GameListService","activeGames","subscription","setGameList","getGameList","getGameListQuery","gameListSubscription","gameList","openGame","joinGame","gameStub","returnedGameData","updateGameList","startNewGame","startGame","filteredGames","newGameList","gameName","gameState","newClientGameService","GameList","gameListService","GameStateEnum","OPEN","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","game_1","player_1","initPlayers","playerstub","checkCurrentPlayerByID","getUnitbyUnitID","unitID","gameServiceObserver"],"mappings":"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","file":"static/js/main.694c104a.chunk.js","sourcesContent":["\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Game = void 0;\nvar liveUnit_1 = require(\"./liveUnit\");\nvar Game = /** @class */ (function () {\n    function Game(args) {\n        var _this = this;\n        this.initializeGame = function () {\n            return _this.players.map(function (player) { return player.units = _this.initializeUnits(player); });\n        };\n        this.initializeUnits = function (player) {\n            var playerUnits = player.unitModels.map(function (unitModel, idx) { return new liveUnit_1.GameUnit(idx, player, unitModel); });\n            _this.units = __spreadArrays(_this.units, playerUnits);\n            return playerUnits;\n        };\n        this.insertUnits = function (units) {\n            for (var i in units)\n                _this.units = _this.units.map(function (unit) { return (units[i].id === unit.id && units[i].player.id === unit.player.id) ? units[i] : unit; });\n        };\n        this.filterDeadUnits = function (units) {\n            return units.filter(function (unit) { return unit.life != 0; });\n        };\n        this.applyAbility = function (applyingUnit, unitAbility, recivingUnit, recivingUnits) {\n            if (applyingUnit.currentTurnTimeout > 0 ||\n                applyingUnit.life < 1)\n                return false;\n            switch (unitAbility.targets[0]) {\n                case 'Clicked': {\n                    var updatedUnits = unitAbility.ability.apply(applyingUnit, unitAbility, _this.filterDeadUnits([recivingUnit]));\n                    _this.insertUnits(updatedUnits);\n                    _this.changeTurn();\n                    return true;\n                }\n                case 'All_by_Player': {\n                    var updatedUnits = unitAbility.ability.apply(applyingUnit, unitAbility, _this.filterDeadUnits(recivingUnits));\n                    _this.insertUnits(updatedUnits);\n                    _this.changeTurn();\n                    return true;\n                }\n                case 'All_by_Enemy': {\n                    var updatedUnits = unitAbility.ability.apply(applyingUnit, unitAbility, _this.filterDeadUnits(recivingUnits));\n                    _this.insertUnits(updatedUnits);\n                    _this.changeTurn();\n                    return true;\n                }\n                default: {\n                    _this.changeTurn();\n                    return true;\n                }\n            }\n        };\n        this.getUnitsByPlayer = function (player) {\n            return _this.units.filter(function (unit) { return unit.player === player; });\n        };\n        this.changeTurn = function () {\n            var _a;\n            if (_this.checkForWinner()) {\n                (_a = _this.gameService) === null || _a === void 0 ? void 0 : _a.endGame(_this.winner);\n            }\n            else {\n                _this.changeTurnTimeouts();\n                _this.switchToNextPlayer();\n                _this.turn++;\n            }\n        };\n        this.changeTurnTimeouts = function () {\n            return _this.getUnitsByPlayer(_this.currentPlayer).map(function (unit) {\n                return unit.currentTurnTimeout > 0 ? unit.currentTurnTimeout-- : unit;\n            });\n        };\n        this.switchToNextPlayer = function () {\n            var players_left = _this.players.length;\n            var idxCurrentPlayerInc = _this.players.indexOf(_this.currentPlayer) + 1;\n            var idxNextPlayer = players_left === idxCurrentPlayerInc ? 0 : idxCurrentPlayerInc;\n            _this.currentPlayer = _this.players[idxNextPlayer];\n        };\n        this.checkForWinner = function () {\n            var players_to_remove = [];\n            for (var i in _this.remaining_players) {\n                var remainingUnits = _this.units.filter(function (unit) {\n                    return unit.life > 0 &&\n                        unit.player.id === _this.remaining_players[i].id;\n                }).length;\n                if (remainingUnits === 0)\n                    players_to_remove.push(_this.remaining_players[i]);\n            }\n            for (var i in players_to_remove)\n                _this.remaining_players = _this.remaining_players.filter(function (player) { return player.name != players_to_remove[i].name; });\n            if (_this.remaining_players.length === 1) {\n                _this.winner = _this.remaining_players[0];\n                return true;\n            }\n            return false;\n        };\n        this.getWinner = function () { return _this.winner; };\n        this.gameService = args.gameService;\n        this.players = args.players;\n        this.remaining_players = this.players;\n        this.turn = args.turn || 0;\n        this.currentPlayer = args.currentPlayer || args.players[0];\n        this.units = [];\n        this.initializeGame();\n    }\n    return Game;\n}());\nexports.Game = Game;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameUnit = void 0;\nvar GameUnit = /** @class */ (function () {\n    function GameUnit(id, player, unitModel) {\n        this.id = id;\n        this.player = player;\n        console.log('Live unit');\n        this.name = unitModel.name;\n        this.life = unitModel.maxlife;\n        this.currentTurnTimeout = 0;\n        this.maxlife = unitModel.maxlife;\n        this.abilities = unitModel.abilities;\n    }\n    return GameUnit;\n}());\nexports.GameUnit = GameUnit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Player = void 0;\nvar unitModels_1 = require(\"./unitModels\");\nvar Player = /** @class */ (function () {\n    function Player(playerSetup, id) {\n        this.name = playerSetup.username;\n        this.id = id;\n        this.userID = playerSetup.userID;\n        this.unitModels = [unitModels_1.Knight, unitModels_1.Witch, unitModels_1.Healer];\n        // this.unitModels = [Knight]\n        this.units = [];\n        this.alive = true;\n    }\n    return Player;\n}());\nexports.Player = Player;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Witch = exports.Healer = exports.Knight = exports.GameUnit = void 0;\nvar abilities_1 = require(\"./abilities\");\nvar GameUnit = /** @class */ (function () {\n    function GameUnit(data) {\n        this.name = data.name;\n        this.maxlife = data.maxlife;\n        this.abilities = data.abilities;\n    }\n    return GameUnit;\n}());\nexports.GameUnit = GameUnit;\nexports.Knight = {\n    name: 'Knight',\n    maxlife: 40,\n    abilities: [{\n            name: abilities_1.Attack.name,\n            damage: 12,\n            turnTimeout: 1,\n            targets: ['Clicked'],\n            ability: abilities_1.Attack\n        }]\n};\nexports.Healer = {\n    name: 'Healer',\n    maxlife: 20,\n    abilities: [{\n            name: abilities_1.Heal.name,\n            damage: 6,\n            targets: ['All_by_Player'],\n            turnTimeout: 3,\n            ability: abilities_1.Heal\n        }]\n};\nexports.Witch = {\n    name: 'Witch',\n    maxlife: 20,\n    abilities: [{\n            name: abilities_1.Burn.name,\n            damage: 10,\n            turnTimeout: 4,\n            targets: ['All_by_Enemy'],\n            ability: abilities_1.Burn\n        }]\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Burn = exports.Heal = exports.Attack = void 0;\nexports.Attack = {\n    name: 'Attack',\n    targets: ['Enemy'],\n    apply: function (applyingUnit, unitAbility, recivingUnits) {\n        applyingUnit.currentTurnTimeout = unitAbility.turnTimeout;\n        return recivingUnits.map(function (unit) { return (__assign(__assign({}, unit), { life: Math.min(unit.maxlife, unit.life - unitAbility.damage) })); });\n    }\n};\nexports.Heal = {\n    name: 'Heal',\n    targets: ['Ally'],\n    apply: function (applyingUnit, unitAbility, recivingUnits) {\n        console.log('unitAbility.turnTimeout');\n        console.log(unitAbility.turnTimeout);\n        applyingUnit.currentTurnTimeout = unitAbility.turnTimeout;\n        console.log('applyingUnit.currentTurnTimeout');\n        console.log(applyingUnit.currentTurnTimeout);\n        return recivingUnits.map(function (unit) { return (__assign(__assign({}, unit), { life: Math.min(unit.maxlife, unit.life + unitAbility.damage) })); });\n    }\n};\nexports.Burn = {\n    name: 'Burn',\n    targets: ['Enemy'],\n    apply: function (applyingUnit, unitAbility, recivingUnits) {\n        applyingUnit.currentTurnTimeout = unitAbility.turnTimeout;\n        return recivingUnits.map(function (unit) { return (__assign(__assign({}, unit), { life: Math.min(unit.maxlife, unit.life - unitAbility.damage) })); });\n    }\n};\n","\nexport enum CookieNameEnum {\n  SESSIONID = \"SESSIONID\",\n}\n\nexport const cookieService = {\n\n  setCookie: (cname, cvalue, exdays) => {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    var expires = \"expires=\"+ d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  },\n\n  // setAuthCookie: (type:CookieNameEnum,value) => {\n  //   var d = new Date();\n  //   d.setTime(d.getTime() + (24*60*60*1000));\n  //   var expires = \"expires=\"+ d.toUTCString();\n  //   document.cookie = \"ID=\" + id + \";\" + expires + \";path=/\";\n  // },\n\n  getCookie: (cname:CookieNameEnum) => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  },\n\n}\n","\nimport { ApolloClient, InMemoryCache, HttpLink, split, gql } from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from 'apollo-utilities';\n\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4444/graphql'\n});\n\nconst wsLink = new WebSocketLink({\n  uri: 'ws://localhost:4444/graphql',\n  options: {\n    reconnect: true\n  }\n});\n\n// The split function takes three parameters:\n//\n// * A function that's called for each operation to execute\n// * The Link to use for an operation if the function returns a \"truthy\" value\n// * The Link to use for an operation if the function returns a \"falsy\" value\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\n// Instantiate client\nexport const apolloClient = new ApolloClient({\n  link: splitLink,\n  uri: \"http://localhost:4444/graphql\",\n  // uri: \"/graphql\",\n  cache: new InMemoryCache()\n})\n","\nimport { gql } from '@apollo/client';\nimport { apolloClient } from './apolloClient'\nimport { cookieService, CookieNameEnum } from './cookieService'\n\nexport interface ILoginData {\n  username: String\n  password: String\n  confirmPassword: String\n}\n\nexport interface IUserService {\n  userID:String\n  sessionID:String\n  login(loginData:ILoginData):Promise<any>\n  register(loginData:ILoginData):Promise<any>\n  checkAuth():Promise<any>\n}\n\nexport class UserService implements IUserService {\n\n  public userID: String\n  public sessionID: String\n  private static instance: IUserService\n\n  private constructor () {\n    this.sessionID = cookieService.getCookie(CookieNameEnum.SESSIONID)\n  }\n\n  public static getInstance(): IUserService {\n    if (!UserService.instance)\n      UserService.instance = new UserService()\n\n    return UserService.instance\n  }\n\n  public async checkAuth() {\n    return await apolloClient.mutate({\n      variables: {\n        sessionID: this.sessionID,\n      },\n      mutation: gql`\n        mutation CheckAuth(\n          $sessionID: String\n        ) {\n          checkAuth(\n            sessionID: $sessionID\n          ) {\n            userID\n            message\n          }\n        }\n      `\n    })\n    .then(res => {\n      this.userID = res.data.checkAuth.userID\n      return res.data\n    })\n    .catch(err => {\n      console.log('checkAuth Error')\n      console.log(err)\n      console.log(err.data?.login)\n      return err.data\n    })\n  }\n\n  public async login(loginData) {\n    return await apolloClient.mutate({\n      variables: {\n        username: loginData.username,\n        password: loginData.password,\n      },\n      mutation: gql`\n        mutation Login(\n          $username: String\n          $password: String\n        ) {\n          login(\n            username: $username\n            password: $password\n          ) {\n            userID\n            sessionID\n            message\n          }\n        }\n      `\n    })\n    .then(res => {\n      this.userID = res.data.login.userID\n      this.sessionID = res.data.login.sessionID\n      return res.data\n    })\n    .catch(err => {\n      console.log('Login Error')\n      console.log(err)\n      console.log(err.data.login)\n      return err.data\n    })\n  }\n\n  public async register(loginData) {\n    return apolloClient.mutate({\n      variables: {\n        username: loginData.username,\n        password:loginData.password,\n        confirmPassword:loginData.confirmPassword,\n      },\n      mutation: gql`\n        mutation Register(\n          $username: String\n          $password: String\n          $confirmPassword: String\n        ) {\n          register(\n            username: $username\n            password: $password\n            confirmPassword: $confirmPassword\n          ) {\n            userID\n            sessionID\n            message\n          }\n        }\n      `\n    })\n    .then(res => {\n      this.userID = res.data.register.userID\n      this.sessionID = res.data.register.sessionID\n      return res.data\n    })\n    .catch(err => {\n      console.log('Register Error')\n      console.log(err)\n      console.log(err.data.login)\n      return err.data\n    })\n  }\n\n}\n","import { FC, useState, useEffect} from 'react'\n\nimport './scss/auth.scss'\nimport { UserService } from \"../services/userService\"\nimport { cookieService, CookieNameEnum } from \"../services/cookieService\"\nimport { IloginResult } from '../interfaces/loginResult'\n\nlet Auth: FC<{\n\n}> = (props) => {\n\n  const userService = UserService.getInstance()\n\n  const [showRegister, setShowRegister] = useState<Boolean>(false)\n  const [loginMessage, setLoginMessage] = useState<IloginResult>({\n    userID: null,\n    sessionID: null,\n    message: \"\",\n  })\n\n  useEffect(() => {\n    const userID = userService.userID\n    const sessionID = userService.sessionID\n    userService.checkAuth()\n    .then(res =>  {\n      if (res.checkAuth.userID) {\n        setLoginMessage({\n          userID,\n          sessionID,\n          message: res.checkAuth.message,\n        })\n      }\n    })\n    .catch(err => {\n      console.log('checkAuth Error')\n      console.log(err.login)\n    })\n  },[])\n\n  const [loginData, setLoginData] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  })\n\n  const { username, password, confirmPassword } = loginData\n\n  const onInputChange = (e) => {\n    setLoginData({\n      ...loginData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (!showRegister) {\n      userService.login(loginData)\n      .then(res =>  {\n        cookieService.setCookie(CookieNameEnum.SESSIONID, res.login.sessionID, 1)\n        setLoginMessage(res.login)\n      })\n      .catch(err => {\n        console.log('loginResult Error')\n        console.log(err.login)\n      })\n    } else {\n      userService.register(loginData)\n      .then(res =>  {\n        setLoginMessage(res.register)\n      })\n      .catch(err => {\n        console.log('registerResult Error')\n        console.log(err.register)\n      })\n    }\n\n  }\n\n  const onClickRegister = (e) =>\n    setShowRegister(true)\n\n  const onClickLogin = (e) =>\n    setShowRegister(false)\n\n  return (\n    <div className=\"auth\">\n      <div className=\"user\">\n      { !loginMessage.sessionID &&\n        <div>\n          <div className=\"authlinks\">\n            <span\n              className=\"authlink\"\n              onClick={onClickLogin}\n            >Login</span>\n            <span> / </span>\n            <span\n              className=\"authlink\"\n              onClick={onClickRegister}\n            >Register</span>\n          </div>\n\n          <form onSubmit={onSubmit}>\n            <label>Username</label>\n            <input\n              name=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={onInputChange}\n            />\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={onInputChange}\n            />\n            {\n              showRegister &&\n              <div>\n                <label>Confirm Password</label>\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={confirmPassword}\n                  onChange={onInputChange}\n                />\n              </div>\n            }\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      }\n        <div\n          className={loginMessage.sessionID ? \"loginMessage success\" : \"loginMessage failure\"}\n        >{loginMessage.message}</div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Auth\n","\nexport const routeStates = {\n  GAMELIST: 'gameList',\n  GAME: 'game',\n};\n","\nimport { FC, useState } from 'react'\n\nimport './scss/menu.scss'\nimport Auth from './auth'\nimport { routeStates } from '../model/routeStates.model'\n\nlet Menu: FC<{\n  routeState:[String,Function]\n}> = (props) => {\n\n  let [route, setRoute] = props.routeState\n\n  return (\n    <div className=\"menu\">\n\n      <Auth />\n\n      <ul className=\"menulist\">\n        <li onClick={e => setRoute(routeStates.GAMELIST)}>\n          GameList\n          {route === routeStates.GAMELIST && <span> &lt;-</span>}\n        </li>\n        <li onClick={e => setRoute(routeStates.GAME)}>\n          Game\n          {route === routeStates.GAME && <span> &lt;-</span>}\n        </li>\n      </ul>\n\n    </div>\n  )\n}\n\n\nexport default Menu\n","import { FC, useState } from 'react'\n\nimport { IUnitAbility } from '../gamelogic/unitModels'\nimport { ILiveUnit } from '../gamelogic/liveUnit'\nimport { IGameService } from '../services/gameService'\nimport { UserService } from '../services/userService'\n\nimport './scss/unit.scss'\n\nlet Unit: FC<{\n  unit:ILiveUnit\n  gameService: IGameService\n  selectedAbilty:[IUnitAbility|null,Function]\n  selectedUnit:[ILiveUnit|null,Function]\n}> = (props) => {\n\n  const gameService = props.gameService\n\n  const unit = props.unit\n  const [selectedUnit, setSelectedUnit] = props.selectedUnit\n  const [selectedAbilty, setSelectedAbilty] = props.selectedAbilty\n\n  const executeAbility = () => {\n    console.log('executeAbility')\n    gameService.dispatchAbility(\n      selectedUnit,\n      selectedAbilty,\n      unit,\n      gameService.game.units.filter(u => u.player.name === unit.player.name)\n    )\n    setSelectedUnit(null)\n    setSelectedAbilty(null)\n  }\n\n  return (\n      <div\n        className={\"Unit\" + (selectedUnit === unit ? \" selectedUnit\": \"\")}\n        onClick={e => {\n            //Check whose turn it is\n            if (gameService.game.turn%2+1 === unit.player.id && UserService.getInstance().userID === unit.player.userID) {\n              if (selectedAbilty && selectedAbilty.ability.targets[0] === 'Ally') {\n                executeAbility()\n              } else {\n                if (selectedUnit === null || unit.player.id === selectedUnit.player.id) {\n                  setSelectedUnit((selectedUnit !== unit && unit.life > 0 ) ? unit : null)\n                  setSelectedAbilty(null)\n                }\n                else console.log('no ability selected')\n              }\n            } else {\n              if (selectedUnit) {\n                if (selectedAbilty && selectedAbilty.ability.targets[0] === 'Enemy') {\n                  executeAbility()\n                } else console.log(\"Can't apply to enemy\")\n              } else console.log(\"It's not your unit\")\n            }\n          }\n        }>\n        <h4>{unit.name}</h4>\n        {/*}<h4>unitID: {unit.id}</h4> */}\n        <h6>{unit.life > 0 ? 'Alive' : 'Dead'}</h6>\n        <h6>{unit.player.name}</h6>\n        {/* }<h6>PlayerID: {unit.player.id}</h6> */}\n        <div>Life: <span>{unit.life > 0? unit.life : 0}</span></div>\n        { unit.currentTurnTimeout > 0 &&\n          <div>Wait<span>{unit.currentTurnTimeout}</span>Turns</div>\n        }\n\n      </div>\n  )\n}\n\n\nexport default Unit\n","\nimport { IClientGameService } from './clientGameService'\n\nexport interface IDisplayedGameService {\n  setDisplayedGameService(gameService:IClientGameService):void\n  getDisplayedGameService():IClientGameService\n}\n\nexport class DisplayedGameService implements IDisplayedGameService {\n\n  private static instance: DisplayedGameService\n  private displayedGameService: IClientGameService\n\n  public static getInstance():DisplayedGameService {\n    if (!DisplayedGameService.instance)\n      DisplayedGameService.instance = new DisplayedGameService()\n\n    return DisplayedGameService.instance\n  }\n\n  public setDisplayedGameService = (gameService:IClientGameService) =>\n    this.displayedGameService = gameService\n\n  public getDisplayedGameService = () =>\n    this.displayedGameService\n\n}\n","\nimport { FC, useState, useEffect, Dispatch, SetStateAction } from 'react'\n\nimport './scss/game.scss'\n\nimport { IUnitAbility } from '../gamelogic/unitModels'\nimport Unit from './unit'\nimport { DisplayedGameService } from '../services/displayedGameService'\nimport { routeStates } from '../model/routeStates.model'\n\nexport let Game: FC<{\n  setRoute: Dispatch<SetStateAction<String>>\n}> = (props) => {\n\n  const gameService = DisplayedGameService.getInstance().getDisplayedGameService()\n  const setRoute = props.setRoute\n\n  const [rerender, setRerender] = useState(0)\n\n  gameService.rerenderView = () => setRerender(rerender+1)\n\n  useEffect(() => {},[rerender])\n\n  const selectedUnitState = useState(null)\n  const [selectedUnit, setSelectedUnit] = selectedUnitState\n\n  const selectedAbilityState = useState<IUnitAbility|null>(null)\n  const [selectedAbilty, setSelectedAbility] = selectedAbilityState\n\n  return (\n    <div className=\"Game\">\n      <div className=\"Timer\">\n        Timer: Todo\n      </div>\n      <div className=\"Turn\">\n\n        {gameService.game.winner &&\n          <div>\n            <span>The Game as Ended - The Winner is {gameService.game.winner.name}</span>\n            <button onClick={(e) =>\n              setRoute(routeStates.GAMELIST)\n            }>Leave Game</button>\n          </div>\n        }\n\n        <span>Turn: {gameService.game.turn}</span>\n        {!gameService.game.winner && <span> - CurrentPlayer: {gameService.game.turn%2+1} {gameService.game.currentPlayer.name}</span>}\n\n      </div>\n      <div className=\"Battle\">\n        {\n          gameService.game.units.filter(unit => unit.player.name == gameService.game.players[0].name).map((unit) =>\n            <Unit\n              key={unit.id}\n              unit={unit}\n              gameService={gameService}\n              selectedAbilty={selectedAbilityState}\n              selectedUnit={selectedUnitState}\n            />\n          )\n        }\n        <div className=\"Divider\">vs</div>\n        {\n          gameService.game.units.filter(unit => unit.player.name == gameService.game.players[1].name).map((unit) =>\n            <Unit\n              key={unit.id}\n              unit={unit}\n              gameService={gameService}\n              selectedAbilty={selectedAbilityState}\n              selectedUnit={selectedUnitState}\n            />\n          )\n        }\n\n      </div>\n\n      <div className=\"Controls\">\n        {\n          selectedUnit?.abilities.map((ability:IUnitAbility) =>\n            <div className={\"Control\" + (selectedAbilty === ability ? ' selected' : '')}\n              onClick={e => {\n                setSelectedAbility(ability)\n              }}\n            >\n            <span>{ability.ability.name}: {ability.damage}</span>\n            {\n              ability.turnTimeout > 1 &&\n              <span>Timeout: {ability.turnTimeout-1}</span>\n            }\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","\nimport { GameService, IGameService, UnitID } from './gameService'\nimport{ UserService } from './userService'\n\nimport { gql } from '@apollo/client';\nimport { apolloClient } from './apolloClient'\n\nimport { ILiveUnit } from '../gamelogic/liveUnit'\nimport { IUnitAbility} from '../gamelogic/unitModels'\n\nexport interface IClientGameService extends IGameService {\n  rerenderView: Function\n}\n\nexport class ClientGameService extends GameService implements IClientGameService {\n\n  public rerenderView: Function\n\n  constructor (args) {\n    super(args)\n    this.setUpSubscription()\n    this.rerenderView = () => {console.log('rerenderView() not Set')}\n  }\n\n  public dispatchAbility = (applyingUnit:ILiveUnit, unitAbility:IUnitAbility, recivingUnit:ILiveUnit, recivingUnits:ILiveUnit[]):void => {\n    console.log('this.gameID')\n    console.log(this.gameID)\n    apolloClient.mutate({\n      variables: {\n        gameID: this.gameID,\n        userID: UserService.getInstance().userID,\n        applyingUnitID: this.createUnitID(applyingUnit),\n        unitAbilityName: unitAbility.ability.name,\n        recivingUnitID: this.createUnitID(recivingUnit),\n        recivingUnitIDs: recivingUnits.map(unit => this.createUnitID(unit))\n      },\n      mutation: gql`\n        mutation ApplyAbility(\n          $gameID: ID,\n          $userID: ID,\n          $applyingUnitID: [ID],\n          $unitAbilityName: String,\n          $recivingUnitID: [ID],\n          $recivingUnitIDs: [[ID]]\n        ) {\n          applyAbility(\n            gameID: $gameID,\n            userID: $userID,\n            applyingUnitID: $applyingUnitID,\n            unitAbilityName: $unitAbilityName,\n            recivingUnitID: $recivingUnitID,\n            recivingUnitIDs: $recivingUnitIDs\n          )\n        }\n      `\n    })\n    // TBD Later\n    // .then(res => console.log(res))\n    .catch(err => console.log(err))\n  }\n\n  private setUpSubscription = () => {\n    const self = this\n    console.log('clientgameService - setUpSubscription')\n    console.log(this.gameID)\n    apolloClient.subscribe({\n      variables: {\n        gameID: this.gameID\n      },\n      query: gql`\n        subscription sendTurn ($gameID: ID) {\n          sendTurn (gameID: $gameID) {\n            applyingUnitID\n            unitAbilityName\n            recivingUnitID\n            recivingUnitIDs\n          }\n        }\n        `,\n    }).subscribe({\n      next (obj) {\n        const args = obj.data.sendTurn\n        console.log('clientgameService')\n        console.log(args)\n        self.callApplyAbility(\n          args.applyingUnitID,\n          args.unitAbilityName,\n          args.recivingUnitID,\n          args.recivingUnitIDs\n        )\n        self.rerenderView()\n      }\n    })\n  }\n\n\n}\n","\nimport { gql } from '@apollo/client';\nimport { apolloClient } from './apolloClient'\n\nimport { UserService } from './userService'\nimport { ClientGameService } from './clientgameService'\nimport { DisplayedGameService } from './displayedGameService'\nimport { routeStates } from '../model/routeStates.model'\n\nexport interface IPlayerStub {\n  username: String\n  userID: String\n}\n\nexport interface IGameStub {\n  gameName: String\n  gameState: String\n  gameID: String\n  players: IPlayerStub[]\n}\n\nexport interface IGameListService {\n  activeGames: IGameStub[]\n  getGameList(setGameList:Function, setRoute:Function):void\n  openGame(): void\n  joinGame(gameStub:IGameStub): void\n}\n\nexport class GameListService implements IGameListService {\n\n  private static instance: GameListService\n\n  public activeGames:IGameStub[]\n  private subscription\n  private setGameList\n\n  private constructor () {\n    const demogame = {\n      gameName: \"Demogame\",\n      gameID: \"DemoID - 1\",\n      gameState: 'Open',\n      players: [{\n        userID: \"Test\",\n        username: \"Testuser\",\n      }],\n    }\n\n    this.activeGames = [demogame]\n    // this.subscription = null\n  }\n\n  public static getInstance():GameListService {\n    if (!GameListService.instance)\n      GameListService.instance = new GameListService()\n\n    return GameListService.instance\n  }\n\n  public getGameList = (setGameList, setRoute) => {\n\n    this.setGameList = setGameList\n\n    if (!this.subscription) {\n      this.getGameListQuery()\n      console.log('getGameList - gameListSubscription')\n      this.subscription = this.gameListSubscription(setRoute)\n    }\n\n  }\n\n  private getGameListQuery = () =>\n    apolloClient.query({\n      query: gql`{\n        getGameList {\n          gameID\n          gameName\n          gameState\n          players {\n            userID\n            username\n          }\n        }\n      }`\n    })\n    .then(res => {\n      const gameList = res.data.getGameList\n      this.activeGames = gameList\n      this.setGameList(gameList)\n    })\n    .catch(err => {\n      console.log('getGameList - Error: ')\n      console.log(err)\n    })\n\n  public openGame = () =>\n    apolloClient.mutate({\n      variables: {\n        userID: UserService.getInstance().userID,\n      },\n      mutation: gql`\n        mutation OpenGame(\n          $userID: ID\n        ){\n          openGame(\n            userID: $userID\n          )\n        }\n      `,\n    })\n    .then(res => res)\n    .catch(err => {\n      console.log('openGame - Error:')\n      console.log(err)\n    })\n\n  public joinGame = (gameStub) =>\n    apolloClient.mutate({\n      variables: {\n        userID: UserService.getInstance().userID,\n        gameID: gameStub.gameID,\n      },\n      mutation: gql`\n        mutation JoinGame(\n          $userID: ID\n          $gameID: ID\n        ){\n          joinGame(\n            userID: $userID\n            gameID: $gameID\n          )\n        }\n      `,\n    })\n    .then(res => res)\n    .catch(err => {\n      console.log('joinGame - Error:')\n      console.log(err)\n    })\n\n  private gameListSubscription = (setRoute) => {\n    const self = this\n    return apolloClient.subscribe({\n      variables: {\n        userID: UserService.getInstance().userID\n      },\n      query: gql`\n        subscription onNewGame {\n          updateGameList {\n            startNewGame\n            gameName\n            gameID\n            gameState\n            players {\n              userID\n              username\n            }\n          }\n        }`,\n    }).subscribe({\n      next (obj) {\n\n        console.log('gameListSubscription')\n        const returnedGameData = obj.data.updateGameList\n        console.log(returnedGameData)\n\n        self.updateGameList(returnedGameData)\n\n        if (\n          returnedGameData.startNewGame &&\n          returnedGameData.players.length === 2 &&\n          returnedGameData.players.filter(player => player.userID === UserService.getInstance().userID).length != 0\n        ) self.startGame(returnedGameData, setRoute)\n\n      }\n    })\n  }\n\n  private updateGameList = (returnedGameData) => {\n    const filteredGames = this.activeGames.filter(game => game.gameID != returnedGameData.gameID)\n    const newGameList = [...filteredGames, {\n      gameID: returnedGameData.gameID,\n      gameName: returnedGameData.gameName,\n      gameState: returnedGameData.gameState,\n      players: returnedGameData.players,\n    }]\n\n    this.activeGames = newGameList\n    this.setGameList(newGameList)\n  }\n\n  private startGame = (game, setRoute) => {\n\n    const newClientGameService = new ClientGameService({\n      gameID: game.gameID,\n      players: game.players\n    })\n\n    DisplayedGameService.getInstance().setDisplayedGameService(newClientGameService)\n\n    setRoute(routeStates.GAME)\n  }\n\n}\n","\nimport { FC, useState, useEffect } from 'react'\n\nimport { GameListService, IGameStub } from '../services/gameListService'\nimport './scss/gameList.scss'\n\nimport { GameStateEnum } from '../model/gameStates.model'\n\nexport let GameList: FC<{\n  setRoute: Function\n}> = (props) => {\n\n  const gameListService = GameListService.getInstance()\n  const [gameList, setGameList] = useState<IGameStub[]>(gameListService.activeGames)\n\n  useEffect(() => {\n    gameListService.getGameList(setGameList, props.setRoute)\n  }, [])\n\n  return (\n    <div className=\"gameListComponent\">\n\n      <h1>Gamelist</h1>\n      <div className=\"openGame\">\n        <button onClick={e => gameListService.openGame()}>Open New Game</button>\n      </div>\n\n      <table className=\"gameList\">\n        <tr>\n          <th>Game Status</th>\n          <th>Game Name</th>\n          <th>No of Players</th>\n          <th>Players</th>\n        </tr>\n        {\n          gameListService.activeGames.map(game => (\n            <tr>\n              <td>{\n                game.gameState === GameStateEnum.OPEN &&\n                  <button\n                    onClick={e => gameListService.joinGame(game)}\n                  >Join</button>\n                  || game.gameState\n              }</td>\n              <td>{game.gameName}</td>\n              <td>{game.players.length}</td>\n              <td>{\n                game.players.map((player, idx) =>\n                  player.username +\n                  (game.players.length-1 === idx ? '' : ', ')\n                )}\n              </td>\n            </tr>\n            )\n        )}\n      </table>\n\n    </div>\n  )\n}\n","import { useState } from 'react';\n\nimport './App.scss';\nimport Menu from './components/menu'\nimport { Game } from './components/game'\nimport { GameList } from './components/gameList'\n\nimport { routeStates } from './model/routeStates.model'\n\nfunction App() {\n\n  const routeState = useState<String>(routeStates.GAMELIST)\n  const [route, setRoute] = routeState\n\n  return (\n    <div className=\"App\">\n\n      <Menu routeState={routeState} />\n\n      {route === routeStates.GAMELIST && <GameList setRoute={setRoute}/>}\n      {route === routeStates.GAME && <Game setRoute={setRoute}/>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameService = void 0;\nvar game_1 = require(\"../gamelogic/game\");\nvar player_1 = require(\"../gamelogic/player\");\nvar GameService = /** @class */ (function () {\n    function GameService(args) {\n        var _this = this;\n        this.initPlayers = function (args) {\n            var _a;\n            (_a = args === null || args === void 0 ? void 0 : args.players) === null || _a === void 0 ? void 0 : _a.map(function (playerstub, idx) { return _this.players[idx] = new player_1.Player(playerstub, idx + 1); });\n        };\n        this.checkCurrentPlayerByID = function (userID) {\n            return userID === _this.game.currentPlayer.userID;\n        };\n        this.dispatchAbility = function (applyingUnit, unitAbility, recivingUnit, recivingUnits) { };\n        this.callApplyAbility = function (applyingUnitID, unitAbilityName, recivingUnitID, recivingUnitIDs) {\n            var applyingUnit = _this.getUnitbyUnitID(applyingUnitID);\n            var unitAbility = applyingUnit.abilities.filter(function (ability) { return ability.name === unitAbilityName; })[0];\n            var recivingUnit = _this.getUnitbyUnitID(recivingUnitID);\n            var recivingUnits = recivingUnitIDs.map(function (recivingUnitID) { return _this.getUnitbyUnitID(recivingUnitID); });\n            if (applyingUnit.life > 0 &&\n                applyingUnit.currentTurnTimeout < 1)\n                return _this.game.applyAbility(applyingUnit, unitAbility, recivingUnit, recivingUnits);\n            return false;\n        };\n        this.createUnitID = function (unit) {\n            return [unit.player.id, unit.id];\n        };\n        this.getUnitbyUnitID = function (unitID) {\n            return _this.game.units.filter(function (unit) { return unit.player.id == unitID[0] && unit.id == unitID[1]; })[0];\n        };\n        this.endGame = function (winner) { var _a; return (_a = _this.gameServiceObserver) === null || _a === void 0 ? void 0 : _a.endGame(winner); };\n        this.players = [];\n        this.initPlayers(args);\n        this.gameServiceObserver = args.gameServiceObserver;\n        this.gameID = (args === null || args === void 0 ? void 0 : args.gameID) || '0';\n        this.game = new game_1.Game({\n            gameService: this,\n            players: this.players,\n        });\n    }\n    return GameService;\n}());\nexports.GameService = GameService;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameStateEnum = void 0;\nvar GameStateEnum;\n(function (GameStateEnum) {\n    GameStateEnum[\"OPEN\"] = \"Open\";\n    GameStateEnum[\"STARTED\"] = \"Started\";\n    GameStateEnum[\"FINISHED\"] = \"Finished\";\n})(GameStateEnum = exports.GameStateEnum || (exports.GameStateEnum = {}));\n;\n"],"sourceRoot":""}