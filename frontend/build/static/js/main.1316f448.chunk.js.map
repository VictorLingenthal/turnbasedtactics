{"version":3,"sources":["services/gameService.js","gamelogic/game.js","gamelogic/liveUnit.js","gamelogic/player.js","gamelogic/unitModels.js","gamelogic/abilities.js","components/menu.tsx","services/apolloClient.ts","services/unitService.ts","components/unit.tsx","services/clientgameService.ts","components/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Object","defineProperty","exports","value","GameService","game_1","require","player_1","_this","this","dispatchAbility","applyingUnit","unitAbility","recivingUnit","recivingUnits","callApplyAbility","applyingUnitID","unitAbilityName","recivingUnitID","recivingUnitIDs","console","log","getUnitbyUnitID","abilities","filter","ability","name","map","game","applyAbility","createUnitID","unit","player","id","unitID","units","unitCountByPlayer","players","unitCount","length","unitlife","life","turn","Player1","Player2","Game","__spreadArrays","s","i","il","arguments","r","Array","k","a","j","jl","liveUnit_1","args","initializePlayers","initializeUnits","playerUnits","unitModels","unitModel","idx","GameUnit","insertUnits","_loop_1","updatedUnit","targets","updatedUnits","apply","changeTurn","getUnitsByPlayer","checkForWinner","switchToNextPlayer","players_left","idxCurrentPlayerInc","indexOf","currentPlayer","idxNextPlayer","maxlife","__extends","extendStatics","d","b","setPrototypeOf","__proto__","p","prototype","hasOwnProperty","call","__","constructor","create","Player","unitModels_1","playerSetup","alive","_super","Knight","Healer","abilities_1","data","Attack","damage","Heal","__assign","assign","t","n","Math","min","Menu","props","className","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","apolloClient","ApolloClient","link","cache","InMemoryCache","Unit","serverunit","UnitService","getUnits","addUnits","gql","then","res","catch","gameService","selectedUnit","setSelectedUnit","selectedAbilty","setSelectedAbilty","executeAbility","u","onClick","e","ClientGameService","incTurn","mutate","variables","mutation","err","setUpSubscription","self","subscribe","next","obj","sendTurn","useEffect","useState","setUnits","turnState","setTurn","error","selectedUnitState","selectedAbilityState","setSelectedAbility","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1316f448.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameService = void 0;\nvar game_1 = require(\"../gamelogic/game\");\nvar player_1 = require(\"../gamelogic/player\");\nvar GameService = /** @class */ (function () {\n    function GameService() {\n        var _this = this;\n        this.dispatchAbility = function (applyingUnit, unitAbility, recivingUnit, recivingUnits) { };\n        this.callApplyAbility = function (applyingUnitID, unitAbilityName, recivingUnitID, recivingUnitIDs) {\n            console.log('callApplyAbility');\n            var applyingUnit = _this.getUnitbyUnitID(applyingUnitID);\n            // console.log(applyingUnit)\n            var unitAbility = applyingUnit.abilities.filter(function (ability) { return ability.name === unitAbilityName; })[0];\n            // console.log(unitAbility)\n            var recivingUnit = _this.getUnitbyUnitID(recivingUnitID);\n            // console.log(recivingUnit)\n            var recivingUnits = recivingUnitIDs.map(function (recivingUnitID) { return _this.getUnitbyUnitID(recivingUnitID); });\n            // console.log(recivingUnits)\n            _this.game.applyAbility(applyingUnit, unitAbility, recivingUnit, recivingUnits);\n            return false;\n        };\n        this.createUnitID = function (unit) {\n            return [unit.player.id, unit.id];\n        };\n        this.getUnitbyUnitID = function (unitID) {\n            return _this.game.units.filter(function (unit) { return unit.player.id == unitID[0] && unit.id == unitID[1]; })[0];\n        };\n        this.unitCountByPlayer = function () {\n            console.log('unitCountByPlayer');\n            var unitCountByPlayer = _this.players.map(function (player) { return ({\n                player: player.name,\n                unitCount: _this.game.units.filter(function (unit) { return unit.player.name == player.name; }).length,\n                unitlife: _this.game.units.map(function (unit) { return unit.life; })\n            }); });\n            console.log(unitCountByPlayer);\n            console.log('currentTurn: ' + _this.game.turn);\n        };\n        this.players = [new player_1.Player1, new player_1.Player2];\n        this.game = new game_1.Game({\n            players: this.players\n        });\n    }\n    return GameService;\n}());\nexports.GameService = GameService;\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Game = void 0;\nvar liveUnit_1 = require(\"./liveUnit\");\nvar Game = /** @class */ (function () {\n    function Game(args) {\n        var _this = this;\n        this.initializePlayers = function () {\n            return _this.players.map(function (player) { return player.units = _this.initializeUnits(player); });\n        };\n        this.initializeUnits = function (player) {\n            var playerUnits = player.unitModels.map(function (unitModel, idx) { return new liveUnit_1.GameUnit(idx, player, unitModel); });\n            _this.units = __spreadArrays(_this.units, playerUnits);\n            return playerUnits;\n        };\n        this.insertUnits = function (units) {\n            var _loop_1 = function (i) {\n                var updatedUnit = units[i];\n                _this.units = _this.units.map(function (unit) { return (updatedUnit.id === unit.id && updatedUnit.player.id === unit.player.id) ? updatedUnit : unit; });\n            };\n            for (var i = 0; i < units.length; i++) {\n                _loop_1(i);\n            }\n        };\n        this.applyAbility = function (applyingUnit, unitAbility, recivingUnit, recivingUnits) {\n            switch (unitAbility.targets[0]) {\n                case 'Clicked': {\n                    var updatedUnits = unitAbility.ability.apply(applyingUnit, unitAbility, [recivingUnit]);\n                    _this.insertUnits(updatedUnits);\n                    _this.changeTurn();\n                    return;\n                }\n                case 'All_by_Player': {\n                    var updatedUnits = unitAbility.ability.apply(applyingUnit, unitAbility, recivingUnits);\n                    _this.insertUnits(updatedUnits);\n                    _this.changeTurn();\n                    return;\n                }\n                default: {\n                    _this.changeTurn();\n                    return;\n                }\n            }\n        };\n        this.getUnitsByPlayer = function (player) {\n            return _this.units.filter(function (unit) { return unit.player === player; });\n        };\n        this.changeTurn = function () {\n            if (_this.checkForWinner()) {\n                console.log('TBD: proclaim winner');\n            }\n            else {\n                _this.switchToNextPlayer();\n                _this.turn++;\n            }\n        };\n        this.switchToNextPlayer = function () {\n            var players_left = _this.players.length;\n            var idxCurrentPlayerInc = _this.players.indexOf(_this.currentPlayer) + 1;\n            var idxNextPlayer = players_left === idxCurrentPlayerInc ? 0 : idxCurrentPlayerInc;\n            _this.currentPlayer = _this.players[idxNextPlayer];\n        };\n        this.checkForWinner = function () {\n            console.log('TBD: are there losers?');\n            return false;\n        };\n        this.players = args.players;\n        this.turn = args.turn || 0;\n        this.currentPlayer = args.currentPlayer || args.players[0];\n        this.units = [];\n        this.initializePlayers();\n    }\n    return Game;\n}());\nexports.Game = Game;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameUnit = void 0;\nvar GameUnit = /** @class */ (function () {\n    function GameUnit(id, player, unitModel) {\n        this.id = id;\n        this.player = player;\n        console.log('Live unit');\n        this.name = unitModel.name;\n        this.life = unitModel.maxlife;\n        this.maxlife = unitModel.maxlife;\n        this.abilities = unitModel.abilities;\n    }\n    return GameUnit;\n}());\nexports.GameUnit = GameUnit;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Player2 = exports.Player1 = exports.Player = void 0;\nvar unitModels_1 = require(\"./unitModels\");\nvar Player = /** @class */ (function () {\n    function Player(playerSetup) {\n        this.name = playerSetup.name;\n        this.id = playerSetup.id;\n        this.unitModels = playerSetup.unitModels;\n        this.units = [];\n        this.alive = true;\n    }\n    return Player;\n}());\nexports.Player = Player;\nvar Player1 = /** @class */ (function (_super) {\n    __extends(Player1, _super);\n    function Player1() {\n        return _super.call(this, {\n            name: \"Player1\",\n            id: 1,\n            unitModels: [unitModels_1.Knight, unitModels_1.Healer],\n            units: [],\n            alive: true\n        }) || this;\n    }\n    return Player1;\n}(Player));\nexports.Player1 = Player1;\nvar Player2 = /** @class */ (function (_super) {\n    __extends(Player2, _super);\n    function Player2() {\n        return _super.call(this, {\n            name: \"Player2\",\n            id: 2,\n            unitModels: [unitModels_1.Knight, unitModels_1.Healer],\n            units: [],\n            alive: true\n        }) || this;\n    }\n    return Player2;\n}(Player));\nexports.Player2 = Player2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Healer = exports.Knight = exports.GameUnit = void 0;\nvar abilities_1 = require(\"./abilities\");\nvar GameUnit = /** @class */ (function () {\n    function GameUnit(data) {\n        this.name = data.name;\n        this.maxlife = data.maxlife;\n        this.abilities = data.abilities;\n    }\n    return GameUnit;\n}());\nexports.GameUnit = GameUnit;\nexports.Knight = {\n    name: 'Knight',\n    maxlife: 50,\n    abilities: [{\n            name: abilities_1.Attack.name,\n            damage: 10,\n            targets: ['Clicked'],\n            ability: abilities_1.Attack\n        }]\n};\nexports.Healer = {\n    name: 'Healer',\n    maxlife: 30,\n    abilities: [{\n            name: abilities_1.Heal.name,\n            damage: 6,\n            targets: ['All_by_Player'],\n            ability: abilities_1.Heal\n        }]\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heal = exports.Attack = void 0;\nexports.Attack = {\n    name: 'Attack',\n    targets: ['Enemy'],\n    apply: function (applyingUnit, unitAbility, recivingUnits) { return (recivingUnits.map(function (unit) { return (__assign(__assign({}, unit), { life: Math.min(unit.maxlife, unit.life - unitAbility.damage) })); })); }\n};\nexports.Heal = {\n    name: 'Heal',\n    targets: ['Ally'],\n    apply: function (applyingUnit, unitAbility, recivingUnits) { return (recivingUnits.map(function (unit) { return (__assign(__assign({}, unit), { life: Math.min(unit.maxlife, unit.life + unitAbility.damage) })); })); }\n};\n","import React, { FC, useState } from 'react'\n\nimport './scss/menu.scss'\n\nlet Menu: FC<{\n\n}> = (props) => {\n\n\n  return (\n    <div className=\"Menu\">\n      <ul>\n        <li>Units</li>\n        <li>Battle</li>\n      </ul>\n    </div>\n  )\n}\n\n\nexport default Menu\n","\nimport { ApolloClient, InMemoryCache, HttpLink, split, gql } from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from 'apollo-utilities';\n\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4444/graphql'\n});\n\nconst wsLink = new WebSocketLink({\n  uri: 'ws://localhost:4444/graphql',\n  options: {\n    reconnect: true\n  }\n});\n\n// The split function takes three parameters:\n//\n// * A function that's called for each operation to execute\n// * The Link to use for an operation if the function returns a \"truthy\" value\n// * The Link to use for an operation if the function returns a \"falsy\" value\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\n// Instantiate client\nexport const apolloClient = new ApolloClient({\n  link: splitLink,\n  uri: \"http://localhost:4444/graphql\",\n  cache: new InMemoryCache()\n})\n","\nimport { gql } from '@apollo/client';\nimport { ApolloClient, NormalizedCacheObject } from '@apollo/client'\n\ntype ServerUnit = {\n  name: string,\n  maxlife: number,\n  // abilities: Ability\n}\n\ninterface IUnit {\n  name: string\n  maxlife: number\n  life: number\n}\n\nclass Unit implements IUnit {\n\n  public name: string\n  public maxlife: number\n  public life: number\n\n  constructor (serverunit:ServerUnit) {\n    this.name = serverunit.name\n    this.life = serverunit.maxlife\n    this.maxlife = serverunit.maxlife\n  }\n\n}\n\nexport interface IUnitService {\n  getUnits(addUnits:Function):Promise<any>\n  initializeUnits(units:ServerUnit[]):IUnit[]\n}\n\nexport class UnitService implements IUnitService {\n\n  private apolloClient:ApolloClient<NormalizedCacheObject>\n\n  constructor (apolloClient:ApolloClient<NormalizedCacheObject>) {\n    this.apolloClient = apolloClient\n  }\n\n  // gets All Units from Server\n  public getUnits = (addUnits:Function):Promise<any> =>\n    this.apolloClient.query({\n        query: gql`{\n            units {\n              name\n              maxlife\n            }\n          }`\n      })\n      .then(res => addUnits(res.data.units as ServerUnit[]))\n      .catch(() => false)\n\n  public initializeUnits = (units:ServerUnit[]):IUnit[] =>\n    units.map(unit => new Unit(unit))\n\n}\n","import React, { FC, useState } from 'react'\n\nimport { IPlayer } from '../gamelogic/player'\nimport { IUnitAbility } from '../gamelogic/unitModels'\nimport { ILiveUnit } from '../gamelogic/liveUnit'\nimport { IGameService } from '../services/GameService'\n\nimport './scss/unit.scss'\n\nlet Unit: FC<{\n  unit:ILiveUnit\n  turn:[number,Function]\n  gameService: IGameService\n  selectedAbilty:[IUnitAbility|null,Function]\n  selectedUnit:[ILiveUnit|null,Function]\n}> = (props) => {\n\n  const gameService = props.gameService\n\n  const unit = props.unit\n  const [selectedUnit, setSelectedUnit] = props.selectedUnit\n  const [selectedAbilty, setSelectedAbilty] = props.selectedAbilty\n  const [turn, setTurn] = props.turn\n\n  const executeAbility = () => {\n    gameService.dispatchAbility(\n      selectedUnit,\n      selectedAbilty,\n      unit,\n      gameService.game.units.filter(u => u.player.name === unit.player.name)\n    )\n    setSelectedUnit(null)\n    setSelectedAbilty(null)\n  }\n\n  return (\n      <div\n        className={\"Unit\" + (selectedUnit === unit ? \" selectedUnit\": \"\")}\n        onClick={e => {\n            //Check whose turn it is\n            if (turn%2+1 === unit.player.id) {\n              if (selectedAbilty && selectedAbilty.ability.targets[0] === 'Ally') {\n                executeAbility()\n              } else {\n                if (selectedUnit === null || unit.player.id === selectedUnit.player.id) {\n                  setSelectedUnit(selectedUnit === unit ? null : unit)\n                  setSelectedAbilty(null)\n                }\n                else console.log('no ability selected')\n              }\n            } else {\n              if (selectedUnit) {\n                if (selectedAbilty && selectedAbilty.ability.targets[0] === 'Enemy') {\n                  executeAbility()\n                } else console.log(\"Can't apply to enemy\")\n              } else console.log(\"It's not your unit\")\n            }\n          }\n        }>\n        <h4>{unit.name}</h4>\n        <h4>ID: {unit.id}</h4>\n        <h6>{unit.life > 0 ? 'Alive' : 'Dead'}</h6>\n        <h6>{unit.player.name}</h6>\n        <h6>PlayerID: {unit.player.id}</h6>\n        <div>Life: <span>{unit.life > 0? unit.life : 0}</span></div>\n\n      </div>\n  )\n}\n\n\nexport default Unit\n","\nimport { GameService, IGameService, UnitID } from './gameService'\n\nimport { gql } from '@apollo/client';\nimport { ApolloClient, NormalizedCacheObject } from '@apollo/client'\n\nimport { ILiveUnit } from '../gamelogic/liveUnit'\nimport { IUnitAbility} from '../gamelogic/unitModels'\n\nexport class ClientGameService extends GameService implements IGameService {\n\n  private apolloClient: ApolloClient<NormalizedCacheObject>\n  public incTurn: Function\n\n  constructor (apolloClient:ApolloClient<NormalizedCacheObject>) {\n    super()\n    this.apolloClient = apolloClient\n    this.setUpSubscription()\n    this.incTurn = () => {console.log('incTurn() not Set')}\n  }\n\n  public dispatchAbility = (applyingUnit:ILiveUnit, unitAbility:IUnitAbility, recivingUnit:ILiveUnit, recivingUnits:ILiveUnit[]):void => {\n    this.apolloClient.mutate({\n      variables: {\n        applyingUnitID: this.createUnitID(applyingUnit),\n        unitAbilityName: unitAbility.ability.name,\n        recivingUnitID: this.createUnitID(recivingUnit),\n        recivingUnitIDs: recivingUnits.map(unit => this.createUnitID(unit))\n      },\n      mutation: gql`\n        mutation ApplyAbility(\n          $applyingUnitID: [ID],\n          $unitAbilityName: String,\n          $recivingUnitID: [ID],\n          $recivingUnitIDs: [[ID]]\n        ) {\n          applyAbility(\n            applyingUnitID: $applyingUnitID,\n            unitAbilityName: $unitAbilityName,\n            recivingUnitID: $recivingUnitID,\n            recivingUnitIDs: $recivingUnitIDs\n          )\n        }\n      `\n    })\n    .then(res => console.log(res))\n    .catch(err => console.log(err))\n  }\n\n  private setUpSubscription = () => {\n    const self = this\n    this.apolloClient.subscribe({\n      query: gql`\n        subscription onTurn {\n          sendTurn {\n            applyingUnitID\n            unitAbilityName\n            recivingUnitID\n            recivingUnitIDs\n          }\n        }\n        `,\n      variables: {}\n    }).subscribe({\n      next (obj) {\n        console.log('Subscription onTurn event new')\n        const args = obj.data.sendTurn\n\n        self.unitCountByPlayer()\n\n        self.callApplyAbility(\n          args.applyingUnitID,\n          args.unitAbilityName,\n          args.recivingUnitID,\n          args.recivingUnitIDs\n        )\n\n        self.incTurn()\n        self.unitCountByPlayer()\n      }\n    })\n  }\n\n\n}\n","import React, { FC, useState, useReducer, useEffect } from 'react'\n\nimport './scss/main.scss'\n\nimport { apolloClient } from '../services/apolloClient'\nimport { UnitService } from '../services/unitService'\nimport { IUnitAbility } from '../gamelogic/unitModels'\nimport { ILiveUnit } from '../gamelogic/liveUnit'\nimport Unit from './unit'\n\nimport { ClientGameService } from '../services/clientgameService'\n\nconsole.log('New Game Loading')\nconst gameService = new ClientGameService(apolloClient)\n\nlet Menu: FC<{\n\n}> = (props) => {\n\n  useEffect(() => {\n    let unitservice = new UnitService(apolloClient)\n    unitservice.getUnits((unit:ILiveUnit) => console.log(unit))\n  },[])\n\n  const [units, setUnits] = useState(gameService.game?.units);\n  const turnState = useState(gameService.game.turn)\n  const [turn, setTurn] = turnState\n\n  const incTurn = () => {\n    console.log('IncTurn!')\n    setTurn(turn+1)\n  }\n  gameService.incTurn = incTurn\n\n  useEffect(() => {\n    // console.log('Turn changed')\n    if (turn != gameService.game.turn)\n      console.error('There was a problem with the turn system')\n    // setTurn(gameService.game.turn)\n    setUnits(gameService.game.units)\n  },[turn])\n\n  const selectedUnitState = useState(null)\n  const [selectedUnit, setSelectedUnit] = selectedUnitState\n\n  const selectedAbilityState = useState<IUnitAbility|null>(null)\n  const [selectedAbilty, setSelectedAbility] = selectedAbilityState\n\n  return (\n    <div className=\"Main\">\n      <div className=\"Timer\">Timer</div>\n      <div className=\"Turn\">Turn: {turn} - CurrentPlayer: {turn%2}</div>\n      <div className=\"Battle\">\n        {\n          units.filter(unit => unit.player.name == gameService.game.players[0].name).map((unit) =>\n            <Unit\n              key={unit.id}\n              unit={unit}\n              turn={turnState}\n              gameService={gameService}\n              selectedAbilty={selectedAbilityState}\n              selectedUnit={selectedUnitState}\n            />\n          )\n        }\n        <div className=\"Divider\">vs</div>\n        {\n          units.filter(unit => unit.player.name == gameService.game.players[1].name).map((unit) =>\n            <Unit\n              key={unit.id}\n              unit={unit}\n              turn={turnState}\n              gameService={gameService}\n              selectedAbilty={selectedAbilityState}\n              selectedUnit={selectedUnitState}\n            />\n          )\n        }\n\n      </div>\n\n      <div className=\"Controls\">\n        {\n          selectedUnit?.abilities.map((ability:IUnitAbility) =>\n            <div className={\"Control\" + (selectedAbilty === ability ? ' selected' : '')}\n              onClick={e => {\n                setSelectedAbility(ability)\n              }}\n            >\n            <span>{ability.ability.name}: {ability.damage}</span>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\n\nexport default Menu\n","import React from 'react';\n\nimport './App.scss';\nimport Menu from './components/menu'\nimport Main from './components/main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}